name: Workflow
on: [push, pull_request]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    name: Build and test
    steps:

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          lfs: true
          submodules: recursive

      - name: Build
        run: make

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: adac-ubuntu-tar-gz
          path: build/adac.tar.gz

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    name: Release
    needs: build-and-test
    steps:

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: adac-ubuntu-tar-gz

      - name: Get the version
        id: get_version
        run: |
          echo ::set-output name=TAG_NAME::${GITHUB_REF#refs/tags/}
          echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}

      - name: Rename
        run: |
          cp adac.tar.gz adac-${{ steps.get_version.outputs.VERSION }}.tar.gz

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.TAG_NAME }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            Initial release
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./adac-${{ steps.get_version.outputs.VERSION }}.tar.gz
          asset_name: adac-linux-${{ steps.get_version.outputs.VERSION }}.tar.gz
          asset_content_type: application/gzip
